import React,{useContext, useEffect, useState} from 'react';
import AssetApi from '../api/AssetApi';
import { AssetContext } from '../context/AssetContext';
import { useHistory } from 'react-router-dom'; 
import AssetApiLeased from '../api/AssetApiLeased';
import _ from 'lodash'  
import moment from 'moment'
import Model from './model';


export default function AssetListleased(props) {

    const pageSize= 3
    
     const{assets,setAssets}=  useContext(AssetContext) 
     
     const {paginatedPosts,setPaginatedPosts} =useContext(AssetContext) 

     const {currentPage,setCurrentPage}=useContext(AssetContext)

     const [openModel,setOpenModel]=useState(false); 
     
     let history = useHistory()
    useEffect(()=>{
          const fetchData=async()=>{
            try{
                const response= await AssetApiLeased.get("/");
                setAssets(response.data.data.leasedassets);
                setPaginatedPosts(_(response.data.data.leasedassets).slice(0).take(pageSize).value())
                console.log(response)
             }catch(err){}
          }
        fetchData();
    },[]) 

    const pageCount = assets ? Math.ceil(assets.length/pageSize) : 0;

    const pages=_.range(1,pageCount+1)
   
    const handleDelete= async (id)=>{
       try{
        const response= await AssetApiLeased.delete(`/${id}`)
        setPaginatedPosts(assets.filter(asset=>{
            return asset.id !==id
        }))
       }catch(err){
         console.log(err)
       }
    }
    const handleUpdate =(id)=>{
       history.push(`/assets/${id}/update`)
    }

    const handleassetView=(id)=>{
        alert("asset Details")
    }

    const handleTruncate=async()=>{
        try{
            const response= await AssetApi.delete('/')
            setAssets(response.data.data);
            console.log(response)
        }catch(err){
            console.log(err)
        }
    }

    const handleSubmit=()=>{
        history.push('assets/createLeasedAsset')
     }

     const pagination=(pageNo)=>{
        setCurrentPage(pageNo);
        const startIndex=(pageNo-1)*pageSize;
        const paginatedPost = _(assets).slice(startIndex).take(pageSize).value();
        setPaginatedPosts(paginatedPost)
    }
    return (
        <div className='list-group'> 
          <div className='d-flex flex-row justify-content-between mb-3'>
              <div className='d-flex flex-row'>
             <input type="search" placeholder='search' style={{borderRadius:"10px",height:"40px"}}/>&nbsp;
              <button onClick={()=>handleTruncate(assets)} className='btn btn-primary 'style={{borderRadius:"25px"}}>Reset</button>
              </div>
              <button onClick={()=>handleSubmit()} className='btn btn-primary ' style={{borderRadius:"25px"}}>Create Asset</button>
          </div>
          <svg width="264" height="30" viewBox="0 0 264 30" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <rect x="0.5" y="0.5" width="263" height="29" rx="14.5" fill="white"/>
                  <path d="M17.8295 13.9545C17.7784 13.5227 17.571 13.1875 17.2074 12.9489C16.8438 12.7102 16.3977 12.5909 15.8693 12.5909C15.483 12.5909 15.1449 12.6534 14.8551 12.7784C14.5682 12.9034 14.3438 13.0753 14.1818 13.294C14.0227 13.5128 13.9432 13.7614 13.9432 14.0398C13.9432 14.2727 13.9986 14.473 14.1094 14.6406C14.223 14.8054 14.3679 14.9432 14.544 15.054C14.7202 15.1619 14.9048 15.2514 15.098 15.3224C15.2912 15.3906 15.4688 15.446 15.6307 15.4886L16.517 15.7273C16.7443 15.7869 16.9972 15.8693 17.2756 15.9744C17.5568 16.0795 17.8253 16.223 18.081 16.4048C18.3395 16.5838 18.5526 16.8139 18.7202 17.0952C18.8878 17.3764 18.9716 17.7216 18.9716 18.1307C18.9716 18.6023 18.848 19.0284 18.6009 19.4091C18.3565 19.7898 17.9986 20.0923 17.527 20.3168C17.0582 20.5412 16.4886 20.6534 15.8182 20.6534C15.1932 20.6534 14.652 20.5526 14.1946 20.3509C13.7401 20.1491 13.3821 19.8679 13.1207 19.5071C12.8622 19.1463 12.7159 18.7273 12.6818 18.25H13.7727C13.8011 18.5795 13.9119 18.8523 14.1051 19.0682C14.3011 19.2812 14.5483 19.4403 14.8466 19.5455C15.1477 19.6477 15.4716 19.6989 15.8182 19.6989C16.2216 19.6989 16.5838 19.6335 16.9048 19.5028C17.2259 19.3693 17.4801 19.1847 17.6676 18.9489C17.8551 18.7102 17.9489 18.4318 17.9489 18.1136C17.9489 17.8239 17.8679 17.5881 17.706 17.4062C17.544 17.2244 17.331 17.0767 17.0668 16.9631C16.8026 16.8494 16.517 16.75 16.2102 16.6648L15.1364 16.358C14.4545 16.1619 13.9148 15.8821 13.517 15.5185C13.1193 15.1548 12.9205 14.679 12.9205 14.0909C12.9205 13.6023 13.0526 13.1761 13.3168 12.8125C13.5838 12.446 13.9418 12.1619 14.3906 11.9602C14.8423 11.7557 15.3466 11.6534 15.9034 11.6534C16.4659 11.6534 16.9659 11.7543 17.4034 11.956C17.8409 12.1548 18.1875 12.4276 18.4432 12.7741C18.7017 13.1207 18.8381 13.5142 18.8523 13.9545H17.8295ZM22.8371 20.6364C22.2064 20.6364 21.6624 20.4972 21.205 20.2188C20.7505 19.9375 20.3996 19.5455 20.1525 19.0426C19.9081 18.5369 19.786 17.9489 19.786 17.2784C19.786 16.608 19.9081 16.017 20.1525 15.5057C20.3996 14.9915 20.7434 14.5909 21.1837 14.304C21.6269 14.0142 22.1439 13.8693 22.7348 13.8693C23.0758 13.8693 23.4124 13.9261 23.7448 14.0398C24.0772 14.1534 24.3797 14.3381 24.6525 14.5938C24.9252 14.8466 25.1425 15.1818 25.3044 15.5994C25.4664 16.017 25.5473 16.5312 25.5473 17.142V17.5682H20.5019V16.6989H24.5246C24.5246 16.3295 24.4508 16 24.303 15.7102C24.1581 15.4205 23.9508 15.1918 23.6809 15.0241C23.4138 14.8565 23.0985 14.7727 22.7348 14.7727C22.3343 14.7727 21.9877 14.8722 21.6951 15.071C21.4053 15.267 21.1823 15.5227 21.026 15.8381C20.8698 16.1534 20.7917 16.4915 20.7917 16.8523V17.4318C20.7917 17.9261 20.8769 18.3452 21.0473 18.6889C21.2206 19.0298 21.4607 19.2898 21.7675 19.4688C22.0743 19.6449 22.4309 19.733 22.8371 19.733C23.1013 19.733 23.34 19.696 23.553 19.6222C23.7689 19.5455 23.955 19.4318 24.1113 19.2812C24.2675 19.1278 24.3883 18.9375 24.4735 18.7102L25.4451 18.983C25.3428 19.3125 25.1709 19.6023 24.9294 19.8523C24.688 20.0994 24.3897 20.2926 24.0346 20.4318C23.6794 20.5682 23.2803 20.6364 22.8371 20.6364ZM28.5233 20.6534C28.1085 20.6534 27.7321 20.5753 27.394 20.419C27.056 20.2599 26.7875 20.0312 26.5887 19.733C26.3898 19.4318 26.2904 19.0682 26.2904 18.642C26.2904 18.267 26.3642 17.9631 26.5119 17.7301C26.6597 17.4943 26.8571 17.3097 27.1043 17.1761C27.3514 17.0426 27.6242 16.9432 27.9225 16.8778C28.2236 16.8097 28.5262 16.7557 28.8301 16.7159C29.2279 16.6648 29.5503 16.6264 29.7975 16.6009C30.0475 16.5724 30.2293 16.5256 30.3429 16.4602C30.4594 16.3949 30.5176 16.2812 30.5176 16.1193V16.0852C30.5176 15.6648 30.4026 15.3381 30.1725 15.1051C29.9452 14.8722 29.6 14.7557 29.1369 14.7557C28.6568 14.7557 28.2804 14.8608 28.0077 15.071C27.735 15.2812 27.5432 15.5057 27.4324 15.7443L26.4779 15.4034C26.6483 15.0057 26.8756 14.696 27.1597 14.4744C27.4466 14.25 27.7591 14.0937 28.0972 14.0057C28.4381 13.9148 28.7733 13.8693 29.1029 13.8693C29.3131 13.8693 29.5546 13.8949 29.8273 13.946C30.1029 13.9943 30.3685 14.0952 30.6242 14.2486C30.8827 14.402 31.0972 14.6335 31.2676 14.9432C31.4381 15.2528 31.5233 15.6676 31.5233 16.1875V20.5H30.5176V19.6136H30.4665C30.3983 19.7557 30.2847 19.9077 30.1256 20.0696C29.9665 20.2315 29.7548 20.3693 29.4906 20.483C29.2264 20.5966 28.904 20.6534 28.5233 20.6534ZM28.6767 19.75C29.0744 19.75 29.4097 19.6719 29.6824 19.5156C29.958 19.3594 30.1654 19.1577 30.3046 18.9105C30.4466 18.6634 30.5176 18.4034 30.5176 18.1307V17.2102C30.475 17.2614 30.3813 17.3082 30.2364 17.3509C30.0943 17.3906 29.9296 17.4261 29.7421 17.4574C29.5574 17.4858 29.377 17.5114 29.2009 17.5341C29.0276 17.554 28.8869 17.571 28.779 17.5852C28.5176 17.6193 28.2733 17.6747 28.046 17.7514C27.8216 17.8253 27.6398 17.9375 27.5006 18.0881C27.3642 18.2358 27.296 18.4375 27.296 18.6932C27.296 19.0426 27.4253 19.3068 27.6838 19.4858C27.9452 19.6619 28.2762 19.75 28.6767 19.75ZM32.8789 20.5V13.9545H33.8505V14.9432H33.9187C34.038 14.6193 34.2539 14.3565 34.5664 14.1548C34.8789 13.9531 35.2312 13.8523 35.6232 13.8523C35.6971 13.8523 35.7894 13.8537 35.9002 13.8565C36.011 13.8594 36.0948 13.8636 36.1516 13.8693V14.892C36.1175 14.8835 36.0394 14.8707 35.9172 14.8537C35.7979 14.8338 35.6715 14.8239 35.538 14.8239C35.2198 14.8239 34.9357 14.8906 34.6857 15.0241C34.4386 15.1548 34.2425 15.3366 34.0976 15.5696C33.9556 15.7997 33.8846 16.0625 33.8846 16.358V20.5H32.8789ZM39.3236 20.6364C38.71 20.6364 38.1816 20.4915 37.7384 20.2017C37.2952 19.9119 36.9543 19.5128 36.7157 19.0043C36.477 18.4957 36.3577 17.9148 36.3577 17.2614C36.3577 16.5966 36.4799 16.0099 36.7242 15.5014C36.9713 14.9901 37.3151 14.5909 37.7554 14.304C38.1986 14.0142 38.7157 13.8693 39.3066 13.8693C39.7668 13.8693 40.1816 13.9545 40.5509 14.125C40.9202 14.2955 41.2228 14.5341 41.4586 14.8409C41.6943 15.1477 41.8407 15.5057 41.8975 15.9148H40.8918C40.8151 15.6165 40.6446 15.3523 40.3804 15.1222C40.1191 14.8892 39.7668 14.7727 39.3236 14.7727C38.9316 14.7727 38.5878 14.875 38.2924 15.0795C37.9997 15.2812 37.7711 15.5668 37.6063 15.9361C37.4443 16.3026 37.3634 16.733 37.3634 17.2273C37.3634 17.733 37.4429 18.1733 37.602 18.5483C37.7639 18.9233 37.9912 19.2145 38.2838 19.4219C38.5793 19.6293 38.9259 19.733 39.3236 19.733C39.585 19.733 39.8222 19.6875 40.0353 19.5966C40.2483 19.5057 40.4287 19.375 40.5764 19.2045C40.7242 19.0341 40.8293 18.8295 40.8918 18.5909H41.8975C41.8407 18.9773 41.7 19.3253 41.4756 19.6349C41.254 19.9418 40.96 20.1861 40.5935 20.3679C40.2299 20.5469 39.8066 20.6364 39.3236 20.6364ZM43.8933 16.5625V20.5H42.8876V11.7727H43.8933V14.9773H43.9786C44.132 14.6392 44.3621 14.3707 44.6689 14.1719C44.9786 13.9702 45.3905 13.8693 45.9047 13.8693C46.3507 13.8693 46.7413 13.9588 47.0766 14.1378C47.4118 14.3139 47.6717 14.5852 47.8564 14.9517C48.0439 15.3153 48.1376 15.7784 48.1376 16.3409V20.5H47.132V16.4091C47.132 15.8892 46.997 15.4872 46.7271 15.2031C46.4601 14.9162 46.0893 14.7727 45.6149 14.7727C45.2854 14.7727 44.9899 14.8423 44.7286 14.9815C44.47 15.1207 44.2655 15.3239 44.1149 15.5909C43.9672 15.858 43.8933 16.1818 43.8933 16.5625Z" fill="#D5D5D5"/>
                  <circle opacity="0.5" cx="248" cy="15" r="12" fill="#F6EDFC"/>
                  <path d="M242 13.9192C242 16.6387 244.22 18.8447 246.964 18.8447C247.955 18.8447 248.87 18.5531 249.631 18.046L252.33 20.7211C252.516 20.9113 252.772 21 253.028 21C253.591 21 254 20.5753 254 20.0301C254 19.7702 253.904 19.5293 253.725 19.3455L251.051 16.683C251.608 15.9097 251.934 14.9525 251.934 13.9192C251.934 11.206 249.708 9 246.964 9C244.22 9 242 11.206 242 13.9192ZM243.388 13.9192C243.388 11.9667 244.994 10.3819 246.964 10.3819C248.94 10.3819 250.539 11.9667 250.539 13.9192C250.539 15.878 248.94 17.4628 246.964 17.4628C244.994 17.4628 243.388 15.878 243.388 13.9192Z" fill="#8626C3"/>
                  <rect x="0.5" y="0.5" width="263" height="29" rx="14.5" stroke="#E3E3E3"/>
                  </svg>
            <table className='table table-hover '>
                <thead>
                    <tr className='center'>
                       <th scope="col">Serial No</th>
                       <th scope="col">Asset Name</th>
                       <th  scope="col">Category</th>
                       <th  scope="col">Specifications</th>
                       <th  scope="col">Manufacturer</th>
                       <th  scope="col">Leased On:
                       <br/>From/Return</th>
                       <th  scope="col">Status</th>
                       <th scope="col">Price per <br/>Month</th>
                       <th  scope="col">Actions</th>
                    </tr>
                </thead>
               
                <tbody> 
                    
                    {paginatedPosts && paginatedPosts.map(assets=>{
                        return(
                         <tr key={assets.id}>
                         <td>{assets.serialnumber}</td>
                         <td>{assets.assetname}</td>
                         <td>{assets.category}</td>
                         <td>{assets.specifications}</td>
                         <td>{assets.manufacturer}</td>
                         <td><span style={{color:"grey",fontWeight:"500",fontSize:"14px"}}>Leased on:</span><br />
                             {moment(assets.received_on_date).format('YYYY/MM/DD')}<br/>
                             <span style={{color:"grey",fontWeight:"500",fontSize:"14px"}}>Leased Expiry on:</span><br />
                             {moment(assets.purchased_on_date).format('YYYY/MM/DD')}</td>
                             <td>{assets.assetstatus}</td>
                         <td>${assets.price}</td>
                         <td>
                         <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"  onClick={()=>setOpenModel(true)}>
                             <circle opacity="0.5" cx="12" cy="12" r="12" fill="#EBFFC0"/>
                           <path d="M11.6699 16.7207C16.3047 16.7207 19.3398 13 19.3398 11.8633C19.3398 10.7207 16.2988 7 11.6699 7C7.11133 7 4 10.7207 4 11.8633C4 13 7.10547 16.7207 11.6699 16.7207ZM11.6699 15.3965C8.27148 15.3965 5.64648 12.6191 5.64648 11.8633C5.64648 11.2305 8.27148 8.32422 11.6699 8.32422C15.0625 8.32422 17.6934 11.2305 17.6934 11.8633C17.6934 12.6191 15.0625 15.3965 11.6699 15.3965ZM11.6758 14.6875C13.2461 14.6875 14.5059 13.3984 14.5059 11.8633C14.5059 10.2871 13.2461 9.03906 11.6758 9.03906C10.0938 9.03906 8.83398 10.2812 8.83984 11.8633C8.8457 13.3984 10.0938 14.6875 11.6758 14.6875ZM11.6699 12.7422C11.1836 12.7422 10.791 12.3379 10.791 11.8633C10.791 11.377 11.1836 10.9844 11.6699 10.9844C12.1562 10.9844 12.5547 11.377 12.5547 11.8633C12.5547 12.3379 12.1562 12.7422 11.6699 12.7422Z" fill="#39AC02"/>
                            </svg> &nbsp;
                            <svg width="24" height="24" onClick={()=>handleUpdate(assets.id)} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                          <circle opacity="0.5" cx="12" cy="12" r="12" fill="#CFF4FF" fill-opacity="0.8"/>
                          <path d="M17.3227 7.73216L17.7932 7.23007C18.0504 6.96647 18.0755 6.58362 17.8246 6.3263L17.6489 6.14429C17.4231 5.91835 17.0342 5.96856 16.7832 6.2196L16.2939 6.69659L17.3227 7.73216ZM10.4162 13.8765L11.6959 13.3556L16.8962 8.15267L15.8674 7.12337L10.6671 12.3326L10.1276 13.5816C10.0586 13.7636 10.2531 13.9393 10.4162 13.8765ZM8.06381 18H14.9076C16.1371 18 16.8585 17.2782 16.8585 15.954V9.7782L15.4157 11.2217V15.7845C15.4157 16.3054 15.146 16.5565 14.7633 16.5565H8.20809C7.71252 16.5565 7.44906 16.3054 7.44906 15.7845V9.35142C7.44906 8.8305 7.71252 8.58573 8.20809 8.58573H12.825L14.2678 7.13593H8.06381C6.72766 7.13593 6 7.85769 6 9.18824V15.954C6 17.2845 6.72766 18 8.06381 18Z" fill="#193777"/>
                          </svg>&nbsp;
                          <svg width="24" height="24" onClick={()=>handleDelete(assets.id)}  viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                 <circle opacity="0.5" cx="12" cy="12" r="12" fill="#FFE9E9"/>
                                 <path d="M9.71586 18H14.2841C15.1057 18 15.6238 17.503 15.6604 16.6305L15.9848 9.19742H16.4715C16.7698 9.19742 17 8.96549 17 8.65071C17 8.33594 16.7698 8.104 16.4715 8.104H14.3469V7.34192C14.3469 6.48596 13.8341 6 12.9393 6H11.0555C10.1554 6 9.64783 6.48596 9.64783 7.34192V8.104H7.52852C7.23025 8.104 7 8.33594 7 8.65071C7 8.96549 7.23025 9.19742 7.52852 9.19742H8.00994L8.33961 16.6305C8.37624 17.5085 8.88906 18 9.71586 18ZM10.7363 7.3861C10.7363 7.14864 10.888 7.00506 11.134 7.00506H12.8608C13.1015 7.00506 13.2585 7.14864 13.2585 7.3861V8.104H10.7363V7.3861ZM9.85714 16.8845C9.59027 16.8845 9.41758 16.6912 9.40188 16.382L9.08268 9.19742H14.9016L14.5929 16.382C14.5772 16.6967 14.4097 16.8845 14.1376 16.8845H9.85714ZM10.5479 16.1114C10.7886 16.1114 10.9351 15.9512 10.9299 15.7138L10.7834 10.3958C10.7781 10.1583 10.6211 10.0037 10.3961 10.0037C10.1606 10.0037 10.0141 10.1638 10.0194 10.4013L10.1659 15.7193C10.1711 15.9567 10.3281 16.1114 10.5479 16.1114ZM11.9974 16.1114C12.2276 16.1114 12.3846 15.9567 12.3846 15.7248V10.3958C12.3846 10.1638 12.2276 10.0037 11.9974 10.0037C11.7724 10.0037 11.6154 10.1638 11.6154 10.3958V15.7248C11.6154 15.9567 11.7724 16.1114 11.9974 16.1114ZM13.4469 16.1114C13.6719 16.1114 13.8237 15.9567 13.8289 15.7248L13.9806 10.4013C13.9859 10.1638 13.8341 10.0092 13.6039 10.0092C13.3789 10.0092 13.2219 10.1638 13.2166 10.3958L13.0649 15.7193C13.0597 15.9512 13.2114 16.1114 13.4469 16.1114Z" fill="#FF0E0E"/>
                                 </svg>
                           &nbsp;
                             </td>
                         </tr>
                        );
                    })}
                </tbody>
            </table>
            {/* <TablePagination
                      rowsPerPageOptions={[5, 10, 25]}
                      component="div"
                      count={assets.length}
                      rowsPerPage={rowsPerPage}
                      page={page}
         /> */}
          <nav className='d-flex justify-content-center'>
              <ul className='pagination'>
                  {
                      pages.map((page)=>(
                         <li className={
                             page === currentPage ? 'page-item active' : 'page-item'
                         }>
                             <p className='page-link'
                             onClick={()=>pagination(page)}>{page}</p>
                             </li>
                      ))
                  }
              </ul>
          </nav>
          {openModel && <Model closeModel={setOpenModel} />}
        </div>
   )  ;
 }